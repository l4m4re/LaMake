#! /usr/bin/env python


def printCategory( category, items, isnested = False ):
    if isnested:
        print '\techo \'++++ {:12s} ++++\'; \\'.format(category)
    else:
        print '\t@echo \'++++ {:12s} ++++\''.format(category)

    for item in items:
        if isnested:
            print "\tif [ \"$(strip $({:s}))\" != \"\" ]; then \\".format(item)
        else:
            print "\t@if [ \"$(strip $({:s}))\" != \"\" ]; then \\".format(item)

        print "\techo '++ {:17s} : $({:s})'; \\".format(item,item)

        if isnested:
            print "\tfi; \\"
        else:
            print "\tfi"


def printLanguage( language, ext ):
    vars = []
    for var in ["PROGS", "ALLSRC", "PROGSRC", "SRC", \
                "TARGETS", "COMPILE", "LINK", "DEPEND"]:
#                "SRCSUFX", "HDRSUFX"] :
        vars.append( var+"."+ext )

    print "\t@if [ \"$(strip $({:s}))\" != \"\" ]; then \\".format("ALLSRC."+ext)
    printCategory( language, vars, True )
    print "\tfi"
       

 
##########
## main ##
##########

print "# Show variables (for debug use only.)"
print "# This file is generated by mkshow.py script." 
print "# Only variables which have a value are shown."
print "show: "

printCategory ("General", ["PROGRAMS", "LIBNAME", "LIBTYPE", \
               "SRCDIRS", "INCDIRS", "BINDIR", "LIBDIR", \
               "OBJDIR", "TESTDIR", "EXAMPLEDIR", "DOCDIR", \
               "DEP_OPT", "AR"])

printLanguage ("C"          , "c" )
printLanguage ("C++"        , "cc" )
printLanguage ("FreeBasic"  , "bas" )
printLanguage ("Assembly"   , "asm")
printLanguage ("PRU asm"    , "pasm" )
printLanguage ("DTS overlay", "dts" )
printLanguage ("ALL"        , "all")
